---
stages:
  - test
  - build
  - publish
  - upload-prep
  - trigger-upload

include:
  - project: saltstack/pop/cicd/ci-templates
    file: /docswork/url-tester-brok.yml
  - project: saltstack/pop/cicd/ci-templates
    file: /docswork/publish-docs-gitlab.yml
  - project: saltstack/pop/cicd/ci-templates
    file: /docswork/salt-publish-docs-release.yml

workflow:
  rules:
    - if: $CI_MERGE_REQUEST_ID == null

variables:
  CICD_UPSTREAM_PATH: "saltstack/open/docs/salt-install-guide"
  GIT_STRATEGY: clone
  GIT_DEPTH: 0

url-tester-brok:
  stage: test

pre-commit:
  stage: test
  image: python:3.11-buster
  variables:
    PRE_COMMIT_HOME: "${CI_PROJECT_DIR}/pre-commit-cache"
  cache:
    key: pre-commit-cache
    paths:
      - pre-commit-cache/
  script:
    - pip install -U pip setuptools wheel
    - pip install -r requirements-dev.txt
    - pre-commit install
    - pre-commit run -a -v --color always

build-site-3005:
  stage: build
  image: python:3.11
  script:
    - git checkout 3005
    - pip install -U pip setuptools wheel nox
    - nox -e 'docs-html(clean=True)'
    - mkdir -p html/en/
    - mv docs/_build/html html/en/3005
    # The following section should only exist on the build meant to be latest build
    # Make sure to modify the first line to target the latest version
    - |
        cp -r html/en/3005 html/en/latest
        echo '<!DOCTYPE html>' > docs/redirector.html
        echo "<html>
          <head>
            <meta http-equiv=\"refresh\" content=\"0; url='./latest/index.html'\" />
          </head>
        </html>" >> docs/redirector.html
        cp docs/redirector.html html/index.html
        cp docs/redirector.html html/en/index.html
        sed -i 's:./latest/index.html:./en/latest/index.html:' html/index.html
  artifacts:
    paths:
      - html
    expire_in: 1 days
  rules:
    - if: '$CI_PROJECT_PATH == $CICD_UPSTREAM_PATH'

build-site-3004:
  stage: build
  image: python:3.11
  script:
    - git checkout 3004
    - pip install -U pip setuptools wheel nox
    - nox -e 'docs-html(clean=True)'
    - mkdir -p html/en/
    - mv docs/_build/html html/en/3004
  artifacts:
    paths:
      - html
    expire_in: 1 days
  rules:
    - if: '$CI_PROJECT_PATH == $CICD_UPSTREAM_PATH'

build-site-main:
  stage: build
  image: python:3.11
  script:
    - git checkout main
    - pip install -U pip setuptools wheel nox
    - nox -e 'docs-html(clean=True)'
    - mkdir -p html/en/
    - mv docs/_build/html html/en/main
  artifacts:
    paths:
      - html
    expire_in: 1 days
  rules:
    - if: '$CI_PROJECT_PATH == $CICD_UPSTREAM_PATH'

build-site-fork:
  stage: build
  image: python:3.11
  script:
    - pip install -U pip setuptools wheel nox
    - nox -e 'docs-html(clean=True)'
    - mkdir -p html/en/
    - mv docs/_build/html html/en/fork
    # This section ensures that GitLab Pages builds for forks
    # properly build and can be visited
    # ex. https://your-GitLab-username.gitlab.io/salt-install-guide
    # Above redirects to: https://your-GitLab-username.gitlab.io/salt-install-guide/en/fork/index.html
    - |
        echo '<!DOCTYPE html>' > docs/redirector.html
        echo "<html>
          <head>
            <meta http-equiv=\"refresh\" content=\"0; url='./fork/index.html'\" />
          </head>
        </html>" >> docs/redirector.html
        cp docs/redirector.html html/index.html
        cp docs/redirector.html html/en/index.html
        sed -i 's:./fork/index.html:./en/fork/index.html:' html/index.html
  artifacts:
    paths:
      - html
    expire_in: 1 days
  rules:
    - if: '$CI_COMMIT_BRANCH != "main" && $CI_COMMIT_BRANCH != "v3006" && $CI_COMMIT_BRANCH != "v3005" && $CI_COMMIT_BRANCH != "v3004" && $CI_PROJECT_PATH != $CICD_UPSTREAM_PATH'

pages:
  stage: publish

upload-prep:
  stage: upload-prep
  image: python:3.11
  script:
    - cp -r public public-prod
    - rm -rf public-prod/en/main
  artifacts:
    paths:
      - public-prod
    expire_in: 1 days
  rules:
    - if: '$CI_PROJECT_PATH == $CICD_UPSTREAM_PATH && $CI_COMMIT_REF_PROTECTED == "true"'

publish-docs:
  stage: trigger-upload
  variables:
    CICD_S3_SOURCE_PATH: "public-prod/"
    CICD_S3_DEST_PATH: "docs.saltproject.io/salt/install-guide/"
    CICD_SOURCE_GITLAB_JOB_NAME: upload-prep
  rules:
    - if: '$CI_COMMIT_REF_PROTECTED == "true" && $CI_PROJECT_PATH == $CICD_UPSTREAM_PATH'
